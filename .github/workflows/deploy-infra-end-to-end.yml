name: Deploy infrastructure end to end

on:
  workflow_dispatch: # manual trigger
  push:
    branches:
      - main
      - actions
    paths:
      - "deploy/**"
      - ".github/workflows/infra-end-to-end.yaml"

env:
  tf_version: 0.14.3
  tf_dir: deploy/terraform/environment

jobs:
  dev_infra_plan:
    runs-on: ubuntu-latest
    env:
      env_name: DEV
    defaults:
      run:
        working-directory: ${{ env.tf_dir }}
    environment:
      name: DEV
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Authentication for Terraform
        uses: Azure/cli@v1
        with:
          inlineScript: |
            echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
            echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Init Terraform
        run: terraform init --backend-config="key=${{ env.env_name }}.terraform.tfstate"

      - name: Terraform Plan
        run: terraform plan -no-color -var-file=terraform.${{ env.env_name }}.tfvars -out=out.plan

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.env_name }}-tf-plan
          path: ${{ github.workspace }}/${{ env.tf_dir }}/out.plan

      - name: Azure logout
        run: az logout
  #################################################################################################
  dev_infra_apply:
    needs: dev_infra_plan
    runs-on: ubuntu-latest
    env:
      env_name: DEV
    defaults:
      run:
        working-directory: ${{ env.tf_dir }}
    environment:
      name: DEV
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Authentication for Terraform
        uses: Azure/cli@v1
        with:
          inlineScript: |
            echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
            echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV

      - name: Download plan
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.env_name }}-tf-plan
          path: ${{ github.workspace }}/${{ env.tf_dir }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Init Terraform
        run: terraform init --backend-config="key=${{ env.env_name }}.terraform.tfstate"

      - name: Terraform Apply
        run: terraform apply -no-color -input=false -auto-approve out.plan

      - name: Output web app URL
        id: get_webapp_url
        run: terraform output -raw slotURL

      - name: Azure logout
        run: az logout
#################################################################################################
  prod_infra_plan:
    needs: dev_infra_apply
    runs-on: ubuntu-latest
    env:
      env_name: PROD
    defaults:
      run:
        working-directory: ${{ env.tf_dir }}
    environment:
      name: PROD-PLAN
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Authentication for Terraform
        uses: Azure/cli@v1
        with:
          inlineScript: |
            echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
            echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Init Terraform
        run: terraform init --backend-config="key=${{ env.env_name }}.terraform.tfstate"

      - name: Setup variables for Terraform Plan
        shell: bash
        run: 'echo "$TERRAFORM_PROD_TFVARS" > terraform.${{ env.env_name }}.tfvars'

      - name: Terraform Plan
        run: terraform plan -no-color -var-file=terraform.${{ env.env_name }}.tfvars -out=out.plan

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.env_name }}-tf-plan
          path: ${{ github.workspace }}/${{ env.tf_dir }}/out.plan

      - name: Azure logout
        run: az logout

  prod_infra_apply:
    needs: prod_infra_plan
    runs-on: ubuntu-latest
    env:
      env_name: PROD
    defaults:
      run:
        working-directory: ${{ env.tf_dir }}
    environment:
      name: PROD
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Authentication for Terraform
        uses: Azure/cli@v1
        with:
          inlineScript: |
            echo "ARM_SUBSCRIPTION_ID=$(az account show --query="id" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_ID=$(az account show --query="user.name" -o tsv)" >> $GITHUB_ENV
            echo "ARM_CLIENT_SECRET=$(jq '.clientSecret' -r <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
            echo "ARM_TENANT_ID=$(az account show --query="tenantId" -o tsv)" >> $GITHUB_ENV

      - name: Download plan
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.env_name }}-tf-plan
          path: ${{ github.workspace }}/${{ env.tf_dir }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Init Terraform
        run: terraform init --backend-config="key=${{ env.env_name }}.terraform.tfstate"

      - name: Terraform Apply
        run: terraform apply -no-color -input=false -auto-approve out.plan

      - name: Azure logout
        run: az logout
